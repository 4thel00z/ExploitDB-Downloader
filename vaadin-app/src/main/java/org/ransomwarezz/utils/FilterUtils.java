package org.ransomwarezz.utils;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Modifier;
import java.util.Arrays;
import java.util.function.Predicate;

/**
 * Created by moe on 13/07/17.
 */
public class FilterUtils {

    public static <E> Predicate<E> generateFilter(String filterText) {
        if (filterText.equals("")) return (item) -> true;
        return (item) -> Arrays.asList(item.getClass().getDeclaredMethods()).
                parallelStream().anyMatch((method) -> {
            if (Modifier.isPublic(method.getModifiers()) &&
                    method.getName().startsWith("get") || method.getName().startsWith("is")) {
                try {
                    Object value = method.invoke(item);
                    return value.toString().toLowerCase().contains(filterText.toLowerCase());
                } catch (IllegalAccessException | InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
            return false;

        });


    }

}

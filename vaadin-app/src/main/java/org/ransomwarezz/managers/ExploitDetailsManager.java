package org.ransomwarezz.managers;

import java.io.IOException;


/**
 * Created by moe on 12/07/17.
 */
public class ExploitDetailsManager {
    private static ExploitDetailsManager INSTANCE;

    public static ExploitDetailsManager getInstance() {
        if (INSTANCE == null) {
            INSTANCE = new ExploitDetailsManager();
        }
        return INSTANCE;
    }

    private String extractDetailsFromUrl(String url) throws IOException {

            /*HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;

            DefaultHttpClient client = new DefaultHttpClient();

            SchemeRegistry registry = new SchemeRegistry();
            SSLSocketFactory socketFactory = SSLSocketFactory.getSocketFactory();
            socketFactory.setHostnameVerifier((X509HostnameVerifier) hostnameVerifier);
            registry.register(new Scheme("https", socketFactory, 443));
            SingleClientConnManager mgr = new SingleClientConnManager(client.getParams(), registry);
            DefaultHttpClient httpClient = new DefaultHttpClient(mgr, client.getParams());
            // Set verifier
            HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier);

            MechanizeAgent agent = new MechanizeAgent(httpClient);
            HtmlDocument page = agent.doRequest(url).setHeader("accept-encoding", "deflate, br").get();
            if (page == null) return getErrorMessage(url);
            HtmlElement htmlElement = page.find("table > tbody > tr > td.code > .container");
            return htmlElement != null ? htmlElement.getText() : getErrorMessage(url);
    */
        return getErrorMessage(url);
    }

    private String getErrorMessage(String url) {
        return new StringBuilder().append("Could not retrieve detail informations for ").append(url).toString();
    }


    public String extractDetailsById(String exploitId) throws IOException {
        return extractDetailsFromUrl(new StringBuilder().append("https://www.exploit-db.com/exploits/").append(exploitId).toString());
    }
}
